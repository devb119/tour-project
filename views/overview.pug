extends base

block content 
  main.main 
    .search_box_container
      .search_box.search_box_over
        input.search_box_input(type='text', placeholder='search...')
        i.fas.fa-search
    if update
      btn.btn.btn--green#add-tour-btn Add Tour
    .card-container
      each tour in tours 
        .card 
          .card__header 
            .card__picture 
              .card__picture-overlay &nbsp;
              img.card__picture-img(src=`/img/tours/${tour.imageCover}` alt=`${tour.name}`)
            h3.heading-tertirary
              span= tour.name 

          .card__details 
            h4.card__sub-heading= `${tour.difficulty} ${tour.duration}-day tour`
            p.card__text= tour.summary
            .card__data 
              svg.card__icon 
                use(xlink:href='/img/icons.svg#icon-map-pin')
              span= tour.startLocation.description
            .card__data 
              svg.card__icon 
                use(xlink:href='/img/icons.svg#icon-calendar')
              span= tour.startDates[0].toLocaleString('en-us', {month: 'long', year: 'numeric'})
            .card__data 
              svg.card__icon 
                use(xlink:href='/img/icons.svg#icon-flag')
              span= `${tour.locations.length} stops`
            .card__data 
              svg.card__icon 
                use(xlink:href='/img/icons.svg#icon-user')
              span= `${tour.maxGroupSize} people`

          .card__footer 
            div
              p
                span.card__footer-value= `$${tour.price}`
                | 
                span.card__footer-text per person 
              p.card__ratings 
                span.card__footer-value= tour.ratingsAverage
                | 
                span.card__footer-text= `rating (${tour.ratingsQuantity})`
            if review
              a.btn.btn--green.btn--small.review(data-tour=`${tour._id},${tour.name},${tour.imageCover}`) Make a review
            else if update
              a.btn.btn--green.btn--small.edit-tour(data-tour=`${JSON.stringify(tour)}`) Edit tour
              button.btn.btn--small.delete-tour-btn(data-tour-id=`${tour._id}`) Delete tour
            else
              a.btn.btn--green.btn--small(href=`/tour/${tour.slug}`) Details
    .overlay.hidden
    if update
      #tour-form.management__form.tour-form.hidden
        button.btn-close X
        h1.heading-secondary.ma-bt-lg
          i.fa.fa-pencil-square-o
          |  Tour Management
        form.form.form-container
          .form__group2
            label.form__label(for='tourName') Tour Name
            input#tourName.form__input(type='text' placeholder='Enter Name' value='' name='name')
          .form__group2
            label.form__label(for='duration') Duration
            input#duration.form__input(type='number' name='duration' placeholder='Enter duration' value='')
          .form__group2
            label.form__label(for='maxGroupSize') Group Size
            input#maxGroupSize.form__input(type='number' name='maxGroupSize' placeholder='Enter Group Size' value='')
          .form__group2
            label.form__label(for='difficulty') Difficulty
            select#difficulty.form__input(name='difficulty')
              option(value='easy') Easy
              option(value='medium') Medium
              option(value='difficult') Difficult
          .form__group2
            label.form__label(for='ratingsAverage') Ratings Average
            input#ratingsAverage.form__input(type='number' name='ratingsAverage' placeholder='4.5')
          .form__group2
            label.form__label(for='ratingsQuantity') Ratings Quantity
            input#ratingsQuantity.form__input(type='number' name='ratingsQuantity' placeholder='0')
          .form__group2
            label.form__label(for='price') Price
            input#price.form__input(type='number' name='price' placeholder='Enter tour price' value='')
          .form__group2
          .form__group2
            label.form__label(for='summary') Summary
            textarea#summary.form__input(type='text' name='summary' placeholder='' cols='30' rows='6')
          .form__group2
            label.form__label(for='description') Description
            textarea#description.form__input(type='text' name='description' placeholder='' cols='30' rows='6')
          .form__group2
            label.form__label(for='imageCover') Image
            label.form__sublabel(for='imageCover') Image Cover
            input#imageCover.form__input(type='file' name='imageCover' accept='image/*')
            label.form__sublabel(for='image1') Image 1
            input#image1.form__input(type='file' name='images' accept='image/*')
            label.form__sublabel(for='image2') Image 2
            input#image2.form__input(type='file' name='images' accept='image/*')
            label.form__sublabel(for='image3') Image 3
            input#image3.form__input(type='file' name='images' accept='image/*')
          .form__group2
            label.form__label Start Date
            label.form__sublabel(for='startdate1') Start Date 1
            input#startDate1.form__input(type='date' name='startDate1')
            label.form__sublabel(for='startdate2') Start Date 2
            input#startDate2.form__input(type='date'  name='startDate2')
            label.form__sublabel(for='startdate3') Start Date 3
            input#startDate3.form__input(type='date' name='startDate3')
          .form__group2
            label.form__label Guider
            .form__group2
            label.form__label(for='guide1') Guide 1
            select#guide1.form__input(name='guide1')
              each user in users
                option(value=`${user._id}`)= user.email
            label.form__label(for='guide2') Guide 2
            select#guide2.form__input(name='guide1')
              each user in users
                option(value=`${user._id}`)= user.email
            label.form__label(for='guide3') Guide 3
            select#guide3.form__input(name='guide1')
              each user in users
                option(value=`${user._id}`)= user.email
          .form__group2
            label.form__label Start Location
            label.form__sublabel(for='startCoordinate') Coordinate
            input#startCoordinate.form__input(type='text' name='startCoord')
            label.form__sublabel(for='startAddress') Address
            input#startAddress.form__input(type='text' name='startAddress')
            label.form__sublabel(for='startDescription') Description
            input#startDescription.form__input(type='text' name='startDescription')
          .form__group2
            label.form__label Location 1
            label.form__sublabel(for='locationCoordinate1') Coordinate 1
            input#locationCoordinate1.form__input(type='text' name='locationCoordinate1')
            label.form__sublabel(for='locationDescription1') Description 1
            input#locationDescription1.form__input(type='text' name='locationDescription1')
          .form__group2
            label.form__label Location 2
            label.form__sublabel(for='locationCoordinate2') Coordinate 2
            input#locationCoordinate2.form__input(type='text' name='locationCoordinate2')
            label.form__sublabel(for='locationDescription2') Description 2
            input#locationDescription2.form__input(type='text' name='locationDescription2')
          .form__group2
            label.form__label Location3
            label.form__sublabel(for='locationCoordinate3') Coordinate 3
            input#locationCoordinate3.form__input(type='text' name='locationCoordinate3')
            label.form__sublabel(for='locationDescription3') Description 3
            input#locationDescription3.form__input(type='text' name='locationDescription3')
          button.btn.btn--green.btn-small.btn--center#add-tour(type='submit')
            | Save
          button.btn.btn--green.btn-small.btn--center#update-tour(type='submit').hidden
            | Save
    if review
      include _reviewForm
    include _confirm